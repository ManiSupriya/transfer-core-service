server:
  port: 8067
  http2:
    enabled: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
    min-response-size: 1024

springdoc:
  api-docs.enabled: on

spring:
  profiles.active: local
  main.lazy-initialization: false
  datasource:
    url: ${MSSQL_DB_URL:jdbc:sqlserver://10.210.183.231:1433;databaseName=MOB-DEV-EG}
    username: ${MSSQL_DB_USERNAME:Mobdbuser}
    password: ${MSSQL_DB_KEY:Mobdbuser}
  jpa:
    show-sql: true
    hibernate:
      dialect: org.hibernate.dialect.SQLServer2012Dialect

external:
  error-code:
    mapper:
      accounts:
        detailCallErrorMap:
          ACC-ESB-001: SEND_EMPTY_RESPONSE
          ACC-ESB-65: EXCEEDS_WITHDRAWL_FREEQUENCY
          ACC-ESB-61: EXCEEDS_WITHDRAWL_LIMIT
      middleware:
        detailCallErrorMap:
          EAI-FCI-BRK-21038: TRANSFER_AMOUNT_IN_NAGATIVE
          EAI-FCI-BRK-2463: FUND_TRANSFER_FREEZED
          EAI-FCI-BRK-998: ULTIMATE_BENEFICIARY_IBAN_NOT_VALID
          FT-VALS-44: EXACHANGE_RATE_AMOUNT_NOT_EQUATE
      otp:
        detailcallErrorMap:
          VERIFY_OTP_4003: INVALID_SESSION_TOKEN
          VERIFY_OTP_10020: OTP_VERIFIVATION_FAILED
          VERIFY_OTP_10200: MAX_OTP_ATTEMPTS_EXCEEDED
          VERIFY_OTP_10403: MAX_OTP_FAILED_ATTEMPTS_EXCEEDED
          VERIFY_OTP_USSM_100: FAILED_TO_VERIFY_OTP
          VERIFY_OTP_USSM_101: NOT_FOUND_USER_IN_DB
          VERIFY_OTP_USSM_102: USER_BLOCKED_STATUS
          VERIFY_OTP_USSM_103: USER_INACTIVE_STATUS
          VERIFY_OTP_USSM_104: FAILED_TO_DECRYPT
          VERIFY_OTP_10402: DENIED_BY_POLICY_OTP_REUSE_NOT_ALLOWED
          VERIFY_OTP_30001: OBJ_TOKENSTORE_ID_NOT_FOUND
          LOGOUT_4004: USER_SESSION_ALREADY_INVALIDATED 
          
  fees-code:
    mapper:
      fees:
        cardLessCashFees: '0'


logging.level:
  ROOT: warn
  # org.hibernate.type.descriptor.sql: trace
  com.mashreq: debug
esb-service:
  url: ${CDM_URL:http://172.24.70.29:7800/AllOperationsSOAP_HTTP_Service}
  app-id: ${SOAP_SERVICE_APPID:SITAPPS}
  origin-id: ${SOAP_SERVICE_ORIGINID:AE}
  connect-timeout: ${SOAP_SERVICE_CONNECTIONTIMEOUT:15000}
  read-timeout: ${SOAP_SERVICE_READTIMEOUT:30000}
  max-connection: ${SOAP_SERVICE_MAXCONNECTION:30}
  keep-alive: ${SOAP_SERVICE_KEEPALIVE:30000}
  access-token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX25hbWUiOiJVQlRlc3Q0QG1hc2hyZXFkZXYuY29tIiwiY2hhbm5lbCI6IjJBRUMzNjRGQTg2MUFBMDY3QkYzOTI2QjZBMUQzMTNBIiwiZW1wbG95ZWVJZCI6bnVsbCwiYnJhbmNoIjoiQUQyQTU2QUVCN0FCRjM1QjYwNEZBODI1NzdEMTVCQUEiLCJhdXRob3JpdGllcyI6WyJVYl9Vc2VyIiwiVUJfUE9XRVIiLCJSZXBvcnRpbmdHcm91cCB7ODJkYWU4MDItNmY2Ni00YTBjLTg5ODAtZDA0ZTRhNDE5OWRlfSIsIlJlcG9ydGluZ0dyb3VwIHs4NzQ0YzU2YS01YWI5LTRhODMtOTk2OS0yZWQ1ZjIxMDViYjN9IiwiVUJVQVQiXSwiZW5hYmxlZCI6dHJ1ZSwiY2xpZW50X2lkIjoiYnJhbmNocG9ydGFsIiwiYnJhbmNoQ29kZSI6IkM3MkI0RDU0OTBFNjIwRTg5NUVEQUFDNzBBOEU5NUMzIiwibmJmIjoxNTgyMjA5NjMxLCJzY29wZSI6WyJyZWFkIiwid3JpdGUiLCJpZGVudGl0eSJdLCJuYW1lIjoiNjYxOERGNENCMjhGMjNGMjNGMzI3M0NFQzZGQ0YyMjMiLCJleHAiOjE1ODIyMTY4MzEsImp0aSI6IjAxYTA3YTZjLWQzMDItNDhmMC1iNDQ2LTQwY2I0MTBlY2FhZSIsImVtYWlsIjpudWxsfQ.hnrskgfb8DuP26VVVrrFcNVRXPk3TKSjslzImlw_dtM


app:
  auth:
    security-service-url: ${IAM_SERVICE_URL:https://digital-eg-dev.mashreq.com/api/ms-security-iam/}
  local:
    currency: 'EGP'
    transaction.code: '015'
    transfer.product.id: 'DBLC'
    country.iso: 'EG'
    address: 'Egypt'
    scheduler: 0 */15 * ? * *
    enabled: true
    iban:
      length: 29
      accountNumber: 17
    bank:
      code: '0046'
  loyalty:
    timeInterval: 1
    smilesProductBin: 524179
  services:
    maintenance: ${MAINTENANCE_SERVICE_URL:https://digital-uat.mashreq.com/api/maintenance-service}
    customers: ${CUSTOMER_SERVICE_URL:https://digital-uat.mashreq.com/api/customers-service}
    accounts: ${ACCOUNT_SERVICE_URL:http://digital-eg-dev.mashreq.com/api/accounts-service}
    otp: https://digital-uat.mashreq.com/api/ms-security-iam/
    cards: ${CARD_SERVICE_URL:https://digital-uat.mashreq.com/api/cards-service}
    notification: ${NOTIFICATION_SERVICE:https://digital-uat.mashreq.com/api/notification-service}
    mobcustomer: ${MOB_CUSTOMER_SERVICE:https://digital-uat.mashreq.com/api/mob-customer-service}
    beneficiary: ${BENEFICIARY_CORE_SERVICE:https://digital-uat.mashreq.com/api/beneficiary-core-service}
    mobcommon: ${MOB_COMMON_SERVICE:http://digital-eg-dev.mashreq.com/api/mob-common-service}
    beneficiaryservice: https://digital-uat.mashreq.com/api/beneficiary-service
    quick-remit: https://digital-uat.mashreq.com/api/mob-quickremit-service
    bank-charges: https://digital-uat.mashreq.com/api/bank-charges-service
  middleware:
    endpoint: http://172.24.70.29:7800/AllOperationsSOAP_HTTP_Service
    timeout: 100000
    srvMsgVersion: 1.0
    srcAppId: SITAPPS
    orgId: AE
    passPhrase: lkoiuytreaghjknvgtsfgdhelaopghen
    narration: Transfer Core Banking
    srvCode: TFT
  ftcc:
    merchantId: ${TFTCC_MERCHANT_ID:000008026734}
    terminalId: ${TFTCC_TERMINAL_ID:20091124}
    authStatus: ${TFTCC_AUTH_STATUS:A}
    amountTag: ${TFTCC_AMOUNT_TAG:TFR_AMT}
    messageThrough: ${TFTCC_MESSAGE_THROUGH:U}
    transTypeCode: ${TFTCC_TRANSFER_TYPE_CODE:FAM}
    srvCode: ${TFTCC_SERVICE_CODE:TFTCC}
    productCode: ${TFTCC_PRODUCT_CODE:PACC}
    debitAccountNo: ${TFTCC_DEBIT_ACCOUNT_NO:011099270455}
    bankReferenceNo: ${TFTCC_BANK_REFERENCE_NO:363c5a1abb}
  nonProd:
      otpRelaxed: ${OTP_RELAXED:true}
  cprRestrictions:
      enabled: ${ENABLE_CPR_CHANGES:false}
  notification:
    email:
      AE:
        emailSubject: ${NOTIFICATION_EMAIL_SUBJECT:%s Transfer request via %s}
        payLaterSubject: ${PL_EMAIL_SUBJECT:Pay later request}
        StandingInstructionSubject: ${SI_EMAIL_SUBJECT:Standing instruction request}x
        enrolmentConfirmSubject: ${CUSTOMER_ENROL_SUBJECT:%s Customer Enroled Successfully %s}
        fromEmailName: ${NOTIFICATION_FROM_EMAIL_NAME:MashreqDigital}
        fromEmailAddress: ${NOTIFICATION_FROM_EMAIL_ADDRESS:MashreqDigital@mashreqbank.com}
        localFundTransfer: templates/mt-within-own-accounts
        otherFundTransfer: templates/mt-other-accounts
        plSiFundTransfer: templates/plEmailTemplate
        enrolmentConfirm: templates/enrolmentConfirm
        paymentFail: templates/paymentFail
        paymentReceived: templates/paymentReceived
        paymentRequestReceived: templates/paymentRequestReceived
        paymentRequestSent: templates/paymentRequestSent
        paymentSuccess: templates/paymentSuccess
      EG:
        emailSubject: ${NOTIFICATION_EMAIL_SUBJECT:%s Transfer request via %s}
        payLaterSubject: ${PL_EMAIL_SUBJECT:Pay later request}
        StandingInstructionSubject: ${SI_EMAIL_SUBJECT:Standing instruction request}
        fromEmailName: ${EMAIL_FROM_NAME_MOB:MashreqDigital}
        fromEmailAddress: ${EMAIL_FROM_ADD_MOB:MashreqDigital@mashreq.com}
        localFundTransfer: templates/mt-within-own-accounts-eg
        otherFundTransfer: templates/mt-other-accounts-eg
        plSiFundTransfer: templates/plEmailTemplate-eg
    sms:
      mashreqServiceId: ${ALERT_SMS_MASHREQ_PAYMENT_SERVICEID:330}
      neoServiceId: ${ALERT_SMS_NEO_PAYMENT_SERVICEID:350}
      priority: ${NOTIFICATION_SMS_SEGMENT_CUSTOMER_PRIORITY:HIGH}
      serviceId: ${NOTIFICATION_SMS_SEGMENT_CUSTOMER_SERVICEID:91}
      callCenterNo: ${NOTIFICATION_SMS_SEGMENT_CUSTOMER_CALL_CENTER_NO:04 424 6666}
      ownAccountTransactionInitiated: ${OWN_ACCOUNT_SMS:Request received for Fund Transfer of {0} {1} with Reference number {2}. Contact {3} if you did not initiate this.}
      plSiCreation: ${PL_SI_CREATION_SMS:On your request SI/Pay later has been set up for the beneficiary {0}, account number {1}. If not requested, please contact {2}. Thank you for using our services.}
      customerEnrolledForNpss: ${CUSTOMER_ENROLLED_NPSS:Customer {0} Successfully Enrolled For IPP Faster Payments}
    push:
      ownAccountTransactionInitiated: ${OWN_ACCOUNT_PUSH:Request received through {0} for a Fund Transfer of {1} {2} with {3}. Contact {4} if you did not initiate this.}
      plSiCreation: ${PL_SI_CREATION_SMS:On your request SI/Pay later has been set up for the beneficiary {0}, account number {1}. If not requested, please contact {2}. Thank you for using our services.}
      customerEnrolledForNpss: ${CUSTOMER_ENROLLED_NPSS:Customer {0} Successfully Enrolled For IPP Faster Payments}
redis:
  enableRedisCache: true
  host: ${REDIS_HOST:localhost}
  port: ${REDIS_PORT:7000}
  password: ${REDIS_PASSWORD:}
  ssl: ${REDIS_SSL_FLAG:false}
  timeout: ${REDIS_TIMEOUT:5000}
  writeTtl: ${REDIS_TTL:60}


mob-common:
  commonUserEventDataSource:
    driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
    jdbcUrl: ${MSSQL_DB_URL:jdbc:sqlserver://10.210.183.231:1433;databaseName=MOB-DEV-EG}
    username: ${MSSQL_DB_USERNAME:Mobdbuser}
    password: ${MSSQL_DB_KEY:Mobdbuser}
    maxPoolSize: 40
    poolName: hikari-user-events-life-pool
    minimumidletime: 600000
    
two-factor-authentication:
  durationInHours: '24'
  twofactorAuthRelaxed: 'true'
  maxAmountAllowed: '5000'
  noOfTransactionsAllowed: '3'